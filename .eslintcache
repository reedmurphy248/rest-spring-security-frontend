[{"C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\index.js":"1","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\App.js":"2","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\protectedRoute.jsx":"4","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\login.jsx":"5","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\signup.jsx":"6","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\adminRoute.jsx":"7","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\adminPage.jsx":"8","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\securepage.jsx":"9","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\userCart.jsx":"10","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\updateProduct.jsx":"11","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\services\\authService.js":"12","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\adminComponent.jsx":"13","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\adminDeleteProductButton.jsx":"14","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\adminUpdateProductButton.jsx":"15","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\postSignUp.jsx":"16","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\loginFuncCom.jsx":"17","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\userComponent.jsx":"18","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\userAddToCartButton.jsx":"19","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\cartVisitComponent.jsx":"20","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\adminCreateNewProductButton.jsx":"21","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\postCheckout.jsx":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":1517,"mtime":1611766054639,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":1647,"mtime":1611435804002,"results":"27","hashOfConfig":"24"},{"size":4362,"mtime":1611765274402,"results":"28","hashOfConfig":"24"},{"size":3902,"mtime":1611595309213,"results":"29","hashOfConfig":"24"},{"size":2069,"mtime":1611435786718,"results":"30","hashOfConfig":"24"},{"size":4123,"mtime":1611614536970,"results":"31","hashOfConfig":"24"},{"size":3695,"mtime":1611765100033,"results":"32","hashOfConfig":"24"},{"size":3767,"mtime":1611766256323,"results":"33","hashOfConfig":"24"},{"size":4817,"mtime":1611768262169,"results":"34","hashOfConfig":"24"},{"size":1104,"mtime":1611416269551,"results":"35","hashOfConfig":"24"},{"size":1525,"mtime":1611435777391,"results":"36","hashOfConfig":"24"},{"size":731,"mtime":1611767336739,"results":"37","hashOfConfig":"24"},{"size":512,"mtime":1611585099026,"results":"38","hashOfConfig":"24"},{"size":560,"mtime":1611595612542,"results":"39","hashOfConfig":"24"},{"size":3700,"mtime":1611594989002,"results":"40","hashOfConfig":"24"},{"size":1518,"mtime":1611597982072,"results":"41","hashOfConfig":"24"},{"size":720,"mtime":1611598783182,"results":"42","hashOfConfig":"24"},{"size":216,"mtime":1611599051593,"results":"43","hashOfConfig":"24"},{"size":326,"mtime":1611614369791,"results":"44","hashOfConfig":"24"},{"size":828,"mtime":1611766148700,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"esw0p8",{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\index.js",[],["102","103"],"C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\App.js",["104","105","106"],"C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\protectedRoute.jsx",[],"C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\login.jsx",["107","108","109"],"import React, { Component } from 'react';\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AuthService from \"../services/authService\";\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Signup from \"./signup\";\r\n\r\nexport default class Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleError = this.handleError.bind(this);\r\n        this.signUp = this.signUp.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            error: false,\r\n            loggedIn: false\r\n        }\r\n\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n\r\n    handleError = () => {\r\n\r\n        this.setState({\r\n            error: false\r\n        })\r\n\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const reqBody = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        axios.post('http://localhost:8080/authenticate', reqBody)\r\n            .then( response => {\r\n\r\n                const history = this.props.history;\r\n\r\n                AuthService.login(() => {\r\n                    history.push(\"/secure\");\r\n                }, response.data.token, response.data.firstName, response.data.credentials);\r\n\r\n                this.setState({\r\n                    loggedIn: true\r\n                })\r\n\r\n                // AuthService.login(() => {\r\n                //     this.props.history.push(\"/secure\")\r\n                // }, response.data.token, response.data.firstName, response.data.credentials)\r\n            })\r\n            .catch( err => {\r\n                console.log(err);\r\n                this.setState({\r\n                    username: \"\",\r\n                    password: \"\",\r\n                    error: true\r\n                })\r\n            });\r\n\r\n    }\r\n\r\n    signUp = () => {\r\n        this.props.history.push(\"/signup\");\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.loggedIn) {\r\n            return <Redirect to={\r\n                {\r\n                    pathname: \"/secure\",\r\n                    state: {\r\n                        from: this.props.location\r\n                    }\r\n                }\r\n            }/>\r\n        } else {\r\n            return (\r\n                <Jumbotron align=\"center\" style={{ maxWidth: '50vw'}}>\r\n                    <h1>Login</h1>\r\n                    <Form>\r\n                    <Form.Group controlId=\"formBasicUsername\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control onChange={this.handleUsernameChange} value={this.state.username} name=\"username\" type=\"text\" placeholder=\"Enter Username\" />\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control onChange={this.handlePasswordChange} value={this.state.password} name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n                    </Form.Group>\r\n                    <Button onClick={this.handleSubmit} variant=\"primary\" type=\"submit\">\r\n                        Login\r\n                    </Button>\r\n                    <Button onClick={this.signUp}>Sign Up</Button>\r\n                    </Form>\r\n                    {\r\n                        this.state.error ? \r\n                        <Alert variant=\"danger\" onClose={this.handleError} dismissible>\r\n                            Invalid Credentials\r\n                        </Alert>\r\n                        :\r\n                        null\r\n                    }\r\n                    \r\n                </Jumbotron>\r\n            )\r\n        }\r\n    }\r\n\r\n}","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\signup.jsx",["110"],"import react, { Component } from \"react\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Jumbotron } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport axios from 'axios';\r\n\r\nexport default class Signup extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n        this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\r\n        this.handleLastNameChange = this.handleLastNameChange.bind(this);\r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n        }\r\n\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n\r\n    handleFirstNameChange = (event) => {\r\n        this.setState({\r\n            firstName: event.target.value\r\n        })\r\n    }\r\n\r\n    handleLastNameChange = (event) => {\r\n        this.setState({\r\n            lastName: event.target.value\r\n        })\r\n    }\r\n\r\n    handleEmailChange = (event) => {\r\n        this.setState({\r\n            email: event.target.value\r\n        })\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n\r\n    \r\n    handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const reqBody = {\r\n            username: this.state.username,\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        axios.post('http://localhost:8080/authenticate/new', reqBody)\r\n            .then(() => {\r\n                this.props.history.push(`/post-signup/${reqBody.firstName}`);\r\n            })\r\n            .catch( err => {\r\n                console.log(err);\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <Jumbotron align=\"center\" style={{ maxWidth: '50vw'}}>\r\n            <h1>Signup</h1>\r\n            <Form>\r\n            <Form.Group controlId=\"formBasicUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control onChange={this.handleUsernameChange} value={this.state.username} name=\"username\" type=\"text\" placeholder=\"Enter Username\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control onChange={this.handleFirstNameChange} value={this.state.firstName} name=\"first-name\" type=\"text\" placeholder=\"Enter First Name\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control onChange={this.handleLastNameChange} value={this.state.lastName} name=\"last-name\" type=\"text\" placeholder=\"Enter Last Name\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control onChange={this.handleEmailChange} value={this.state.email} name=\"email\" type=\"email\" placeholder=\"Enter email\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control onChange={this.handlePasswordChange} value={this.state.password} name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n            </Form.Group>\r\n            <Button onClick={this.handleSubmit} variant=\"primary\" type=\"submit\">\r\n                Sign Up\r\n            </Button>\r\n            </Form>\r\n        </Jumbotron>\r\n       )\r\n    }\r\n    \r\n}","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\adminRoute.jsx",["111"],"import React, { useState, useEffect, Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/authService\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => {\r\n\r\n    const [credentials, updateCredentials] = useState({\r\n        loggedIn: false,\r\n        role: \"USER\",\r\n        verificationFinished: false\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        const config = AuthService.getToken();\r\n\r\n        axios.get('http://localhost:8080/verify', config)\r\n            .then(res => {\r\n                updateCredentials({\r\n                    loggedIn: true,\r\n                    role: res.data,\r\n                    verificationFinished: true\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                updateCredentials({\r\n                    verificationFinished: true\r\n                })\r\n            })\r\n\r\n    }, []);\r\n\r\n    if (!credentials.verificationFinished) {\r\n        return <div>Loading</div>\r\n    }\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={ props => {\r\n                if (credentials.loggedIn && credentials.role === \"ADMIN\") {\r\n                    return <Component {...props} />;\r\n                }\r\n                else if (credentials.loggedIn) {\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: \"/secure\",\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n                        }\r\n                    }/>\r\n                }\r\n                else {\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: \"/login\",\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n                        }\r\n                    }/>\r\n                }\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default AdminRoute;","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\adminPage.jsx",["112","113","114"],"import react, { useEffect, useState } from \"react\";\r\nimport AuthService from \"../services/authService\";\r\n\r\nimport { Jumbotron } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default function AdminPage(props) {\r\n\r\n    const [productDetails, setProductDetails] = useState({\r\n        productName: \"\",\r\n        productDescription: \"\",\r\n        productUnitPrice: 0\r\n    });\r\n\r\n    const [successCondition, setSuccessCondition] = useState({\r\n        success: false\r\n    });\r\n\r\n    function handleChange(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        setProductDetails(prevValue => {\r\n\r\n            if (event.target.name === \"name\") {\r\n                return {\r\n                    productName: event.target.value,\r\n                    productDescription: prevValue.productDescription,\r\n                    productUnitPrice: prevValue.productUnitPrice\r\n                }\r\n            } else if (event.target.name === \"description\") {\r\n                return {\r\n                    productName: prevValue.productName,\r\n                    productDescription: event.target.value,\r\n                    productUnitPrice: prevValue.productUnitPrice\r\n                }\r\n            } else if (event.target.name === \"unitPrice\") {\r\n                return {\r\n                    productName: prevValue.productName,\r\n                    productDescription: prevValue.productDescription,\r\n                    productUnitPrice: event.target.value\r\n                }\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    function submitProduct() {\r\n\r\n        const config = AuthService.getToken();\r\n\r\n        const product = {\r\n            name: productDetails.productName,\r\n            description: productDetails.productDescription,\r\n            unitPrice: productDetails.productUnitPrice\r\n        }\r\n\r\n        axios.post('http://localhost:8080/admin/add-product', product, config)\r\n            .then(() => {\r\n                setProductDetails({\r\n                    productName: \"\",\r\n                    productDescription: \"\",\r\n                    productUnitPrice: \"\"\r\n                })\r\n                setSuccessCondition({\r\n                    success: true\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    return (\r\n        <Jumbotron align=\"center\" style={{ maxWidth: '50vw'}}>\r\n            <h1>Welcome to the Admin Page, { sessionStorage.getItem('firstName') }</h1>\r\n            <h3>Create Product</h3>\r\n            <Form>\r\n            <Form.Group>\r\n                <Form.Label>Product Name</Form.Label>\r\n                <Form.Control onChange={handleChange} value={productDetails.productName} name=\"name\" type=\"text\" placeholder=\"Enter Product Name\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Product Description</Form.Label>\r\n                <Form.Control onChange={handleChange} value={productDetails.productDescription} name=\"description\" type=\"text\" placeholder=\"Enter Product Description\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Product Price</Form.Label>\r\n                <Form.Control onChange={handleChange} value={productDetails.productUnitPrice} name=\"unitPrice\" type=\"text\" placeholder=\"Enter Product Description\" />\r\n            </Form.Group>\r\n            <div>\r\n                <Button onClick={submitProduct} variant=\"primary\" type=\"submit\">\r\n                    Create Product\r\n                </Button>\r\n                <Button\r\n                    onClick={() => {\r\n                                AuthService.logout(() => {\r\n                                    props.history.push(\"/login\");\r\n                                })\r\n                            }}>\r\n                            Logout\r\n                </Button>\r\n            </div>\r\n            <div>\r\n                <Button variant=\"warning\"><Link to=\"/secure\">View All Products</Link></Button>\r\n            </div>\r\n            </Form>\r\n        </Jumbotron>\r\n    )\r\n}","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\securepage.jsx",["115","116"],"import react, { useEffect, useState } from \"react\";\r\nimport AuthService from \"../services/authService\";\r\n\r\nimport axios from \"axios\";\r\nimport { Jumbotron } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport AdminComponent from \"./adminComponent\";\r\nimport AdminDeleteProductButton from \"./adminDeleteProductButton\";\r\nimport AdminUpdateProductButton from \"./adminUpdateProductButton\";\r\nimport UserComponent from \"./userComponent\";\r\nimport UserAddToCartButton from \"./userAddToCartButton\";\r\nimport CartVisitComponent from \"./cartVisitComponent\";\r\nimport AdminCreateProductButton from \"./adminCreateNewProductButton\";\r\n\r\nexport default function SecurePage(props) {\r\n\r\n    const [errorState, handleError] = useState({\r\n        error: false\r\n    });\r\n\r\n    const [productList, updateProducts] = useState({\r\n        products: []\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        if(props.history.location.state != null) {\r\n            if (props.history.location.state.from.pathname === \"/admin\") {\r\n                handleError({\r\n                    error: true\r\n                })\r\n            }\r\n        }\r\n\r\n        getProductList();\r\n\r\n    }, []);\r\n\r\n    const getProductList = () => {\r\n\r\n        const config = AuthService.getToken();\r\n\r\n        axios.get('http://localhost:8080/user/all-products', config)\r\n            .then(res => {\r\n                updateProducts({\r\n                    products: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n\r\n    const changeError = (event) => {\r\n\r\n        handleError({\r\n            error: false\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <Jumbotron align=\"center\" style={{ maxWidth: '50vw'}}>\r\n            <h1>Welcome to the Secure Page, { sessionStorage.getItem('firstName') }</h1>\r\n            <UserComponent component={CartVisitComponent}/>\r\n            <div>\r\n                <Button \r\n                    onClick={() => {\r\n                        AuthService.logout(() => {\r\n                            props.history.push(\"/login\");\r\n                        })\r\n                    }}>\r\n                    Logout\r\n                </Button>\r\n            </div>\r\n            {\r\n                errorState.error ? \r\n                <Alert variant=\"danger\" onClose={changeError} dismissible>\r\n                    Invalid Credentials: Admin Access Only\r\n                </Alert>\r\n                :\r\n                null\r\n            }\r\n            <h2>Product List</h2>\r\n            { productList.products.map( product => {\r\n                return (\r\n                    <div key={product.id} id={product.id}>\r\n                        <Card style={{ width: '18rem' }}>\r\n                        <Card.Body>\r\n                        <Card.Title>{product.name}</Card.Title>\r\n                        <Card.Subtitle className=\"mb-2 text-muted\">{product.description}</Card.Subtitle>\r\n                        <Card.Text>\r\n                            Price: ${product.unitPrice}\r\n                        </Card.Text>\r\n                        <UserComponent component={UserAddToCartButton} id={product.id}/>\r\n                        <AdminComponent component={AdminDeleteProductButton} id={product.id} functionProp={getProductList}/>\r\n                        <AdminComponent component={AdminUpdateProductButton} id={product.id} />\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                )\r\n            })}\r\n            <AdminComponent component={AdminCreateProductButton} />\r\n        </Jumbotron>\r\n\r\n    )\r\n}","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\userCart.jsx",["117","118"],"C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\updateProduct.jsx",["119","120","121","122"],"C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\services\\authService.js",[],"C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\adminComponent.jsx",["123","124","125","126"],"import React, { useState, useEffect, Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/authService\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst AdminComponent = ({ component: Component, id: id, functionProp: functionProp, ...rest }) => {\r\n\r\n    const [credentials, updateCredentials] = useState({\r\n        loggedIn: false,\r\n        role: \"USER\",\r\n        verificationFinished: false\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        const config = AuthService.getToken();\r\n\r\n        axios.get('http://localhost:8080/verify', config)\r\n            .then(res => {\r\n                updateCredentials({\r\n                    loggedIn: true,\r\n                    role: res.data,\r\n                    verificationFinished: true\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                updateCredentials({\r\n                    verificationFinished: true\r\n                })\r\n            })\r\n\r\n    }, []);\r\n\r\n    if (!credentials.verificationFinished) {\r\n        return <div>Loading</div>\r\n    }\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={ props => {\r\n                if (credentials.loggedIn && credentials.role === \"ADMIN\") {\r\n                    return <Component {...props} id={id} functionProp={functionProp} />;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default AdminComponent;","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\adminDeleteProductButton.jsx",["127","128","129","130","131"],"C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\adminUpdateProductButton.jsx",["132","133","134","135","136","137","138"],"import React, { useState, useEffect, Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/authService\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default function AdminUpdateProductButton(props) {\r\n\r\n    const link = `/update/${props.id}`;\r\n\r\n    return (\r\n        <Button variant=\"success\" id={props.id}><Link to={link}>Update Product</Link></Button>\r\n    )\r\n\r\n}","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\postSignUp.jsx",["139","140","141","142"],"import react, { Component } from \"react\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Jumbotron } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function PostSignup(props) {\r\n    \r\n    const params = props.match.params;\r\n\r\n    return (\r\n        <Jumbotron align=\"center\" style={{ maxWidth: '50vw'}}>\r\n            <h1>Thanks for Signing Up, {params.firstName}!</h1>\r\n            <h2>Continue to <Link to=\"/login\">Sign In</Link></h2>\r\n        </Jumbotron>\r\n    )\r\n    \r\n}","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\loginFuncCom.jsx",["143","144","145"],"import React, { useState } from 'react';\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AuthService from \"../services/authService\";\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Signup from \"./signup\";\r\n\r\nexport default function LoginFuncCom(props) {\r\n\r\n    const [userDetails, changeUserDetails] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const [errorState, changeErrorState] = useState({\r\n        error: false\r\n    })\r\n\r\n    const [credentials, updateCredentials] = useState({\r\n        loggedIn: false\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n        event.preventDefault();\r\n        changeUserDetails(prevValue => {\r\n            return {\r\n                username: event.target.value,\r\n                password: prevValue.password\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleError = () => {\r\n        changeErrorState({\r\n            error: false\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const reqBody = {\r\n            username: userDetails.username,\r\n            password: userDetails.password\r\n        }\r\n        axios.post('http://localhost:8080/authenticate', reqBody)\r\n            .then( response => {\r\n\r\n                AuthService.login(() => {\r\n                    props.history.push(\"/secure\");\r\n                }, response.data.token, response.data.firstName, response.data.credentials);\r\n\r\n                updateCredentials({\r\n                    loggedIn: true\r\n                });\r\n            })\r\n            .catch( err => {\r\n                console.log(err);\r\n                changeUserDetails({\r\n                    username: \"\",\r\n                    password: \"\"\r\n                })\r\n                changeErrorState({\r\n                    error: true\r\n                })\r\n            });\r\n\r\n    }\r\n\r\n    const signUp = () => {\r\n        props.history.push(\"/signup\");\r\n    }\r\n\r\n    if (credentials.loggedIn) {\r\n        return <Redirect to={\r\n            {\r\n                pathname: \"/secure\",\r\n                state: {\r\n                    from: props.location\r\n                }\r\n            }\r\n        }/>\r\n    } else {\r\n        return (\r\n            <Jumbotron align=\"center\" style={{ maxWidth: '50vw'}}>\r\n                <h1>Login</h1>\r\n                <Form>\r\n                <Form.Group controlId=\"formBasicUsername\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control onChange={handleChange} value={userDetails.username} name=\"username\" type=\"text\" placeholder=\"Enter Username\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control onChange={handleChange} value={userDetails.password} name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n                </Form.Group>\r\n                <Button onClick={handleSubmit} variant=\"primary\" type=\"submit\">\r\n                    Login\r\n                </Button>\r\n                <Button onClick={signUp}>Sign Up</Button>\r\n                </Form>\r\n                {\r\n                    errorState.error ? \r\n                    <Alert variant=\"danger\" onClose={handleError} dismissible>\r\n                        Invalid Credentials\r\n                    </Alert>\r\n                    :\r\n                    null\r\n                }\r\n                \r\n            </Jumbotron>\r\n        )\r\n    }\r\n\r\n}","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\userComponent.jsx",["146","147","148","149"],"import React, { useState, useEffect, Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/authService\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst UserComponent = ({ component: Component, id: id, functionProp: functionProp, ...rest }) => {\r\n\r\n    const [credentials, updateCredentials] = useState({\r\n        loggedIn: false,\r\n        role: \"\",\r\n        verificationFinished: false\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        const config = AuthService.getToken();\r\n\r\n        axios.get('http://localhost:8080/verify', config)\r\n            .then(res => {\r\n                updateCredentials({\r\n                    loggedIn: true,\r\n                    role: res.data,\r\n                    verificationFinished: true\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                updateCredentials({\r\n                    verificationFinished: true\r\n                })\r\n            })\r\n\r\n    }, []);\r\n\r\n    if (!credentials.verificationFinished) {\r\n        return <div>Loading</div>\r\n    }\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={ props => {\r\n                if (credentials.loggedIn && credentials.role === \"USER\") {\r\n                    return <Component {...props} id={id} functionProp={functionProp} />;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default UserComponent;","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\userAddToCartButton.jsx",[],"C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\cartVisitComponent.jsx",[],"C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\adminCreateNewProductButton.jsx",["150","151","152"],"import React, { useState, useEffect, Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport default function AdminCreateProductButton(props) {\r\n\r\n    return (\r\n        <Button variant=\"warning\"><Link to=\"/admin\">Create New Product</Link></Button>\r\n    )\r\n\r\n}","C:\\Users\\reedm\\IdeaProjects\\rest-security\\spring-jwt-frontend\\src\\components\\postCheckout.jsx",["153","154"],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":1,"column":8,"nodeType":"161","messageId":"162","endLine":1,"endColumn":12},{"ruleId":"159","severity":1,"message":"163","line":2,"column":42,"nodeType":"161","messageId":"162","endLine":2,"endColumn":50},{"ruleId":"159","severity":1,"message":"164","line":7,"column":8,"nodeType":"161","messageId":"162","endLine":7,"endColumn":20},{"ruleId":"159","severity":1,"message":"165","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":15},{"ruleId":"159","severity":1,"message":"166","line":5,"column":10,"nodeType":"161","messageId":"162","endLine":5,"endColumn":14},{"ruleId":"159","severity":1,"message":"167","line":19,"column":8,"nodeType":"161","messageId":"162","endLine":19,"endColumn":14},{"ruleId":"159","severity":1,"message":"168","line":1,"column":8,"nodeType":"161","messageId":"162","endLine":1,"endColumn":13},{"ruleId":"159","severity":1,"message":"169","line":1,"column":38,"nodeType":"161","messageId":"162","endLine":1,"endColumn":47},{"ruleId":"159","severity":1,"message":"168","line":1,"column":8,"nodeType":"161","messageId":"162","endLine":1,"endColumn":13},{"ruleId":"159","severity":1,"message":"170","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"171","line":20,"column":12,"nodeType":"161","messageId":"162","endLine":20,"endColumn":28},{"ruleId":"159","severity":1,"message":"168","line":1,"column":8,"nodeType":"161","messageId":"162","endLine":1,"endColumn":13},{"ruleId":"172","severity":1,"message":"173","line":40,"column":8,"nodeType":"174","endLine":40,"endColumn":10,"suggestions":"175"},{"ruleId":"159","severity":1,"message":"168","line":1,"column":8,"nodeType":"161","messageId":"162","endLine":1,"endColumn":13},{"ruleId":"159","severity":1,"message":"176","line":8,"column":10,"nodeType":"161","messageId":"162","endLine":8,"endColumn":15},{"ruleId":"159","severity":1,"message":"168","line":1,"column":8,"nodeType":"161","messageId":"162","endLine":1,"endColumn":13},{"ruleId":"159","severity":1,"message":"177","line":8,"column":10,"nodeType":"161","messageId":"162","endLine":8,"endColumn":19},{"ruleId":"159","severity":1,"message":"171","line":26,"column":12,"nodeType":"161","messageId":"162","endLine":26,"endColumn":28},{"ruleId":"172","severity":1,"message":"178","line":50,"column":8,"nodeType":"174","endLine":50,"endColumn":10,"suggestions":"179"},{"ruleId":"159","severity":1,"message":"169","line":1,"column":38,"nodeType":"161","messageId":"162","endLine":1,"endColumn":47},{"ruleId":"159","severity":1,"message":"163","line":2,"column":17,"nodeType":"161","messageId":"162","endLine":2,"endColumn":25},{"ruleId":"180","severity":1,"message":"181","line":7,"column":49,"nodeType":"182","messageId":"183","endLine":7,"endColumn":55,"fix":"184"},{"ruleId":"180","severity":1,"message":"185","line":7,"column":57,"nodeType":"182","messageId":"183","endLine":7,"endColumn":83,"fix":"186"},{"ruleId":"159","severity":1,"message":"187","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"170","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"169","line":1,"column":38,"nodeType":"161","messageId":"162","endLine":1,"endColumn":47},{"ruleId":"159","severity":1,"message":"165","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":15},{"ruleId":"159","severity":1,"message":"163","line":2,"column":17,"nodeType":"161","messageId":"162","endLine":2,"endColumn":25},{"ruleId":"159","severity":1,"message":"187","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"170","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"169","line":1,"column":38,"nodeType":"161","messageId":"162","endLine":1,"endColumn":47},{"ruleId":"159","severity":1,"message":"165","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":15},{"ruleId":"159","severity":1,"message":"163","line":3,"column":17,"nodeType":"161","messageId":"162","endLine":3,"endColumn":25},{"ruleId":"159","severity":1,"message":"188","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":19},{"ruleId":"159","severity":1,"message":"189","line":8,"column":8,"nodeType":"161","messageId":"162","endLine":8,"endColumn":13},{"ruleId":"159","severity":1,"message":"168","line":1,"column":8,"nodeType":"161","messageId":"162","endLine":1,"endColumn":13},{"ruleId":"159","severity":1,"message":"169","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"190","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":14},{"ruleId":"159","severity":1,"message":"191","line":5,"column":10,"nodeType":"161","messageId":"162","endLine":5,"endColumn":16},{"ruleId":"159","severity":1,"message":"165","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":15},{"ruleId":"159","severity":1,"message":"166","line":5,"column":10,"nodeType":"161","messageId":"162","endLine":5,"endColumn":14},{"ruleId":"159","severity":1,"message":"167","line":19,"column":8,"nodeType":"161","messageId":"162","endLine":19,"endColumn":14},{"ruleId":"159","severity":1,"message":"169","line":1,"column":38,"nodeType":"161","messageId":"162","endLine":1,"endColumn":47},{"ruleId":"159","severity":1,"message":"163","line":2,"column":17,"nodeType":"161","messageId":"162","endLine":2,"endColumn":25},{"ruleId":"180","severity":1,"message":"181","line":7,"column":48,"nodeType":"182","messageId":"183","endLine":7,"endColumn":54,"fix":"192"},{"ruleId":"180","severity":1,"message":"185","line":7,"column":56,"nodeType":"182","messageId":"183","endLine":7,"endColumn":82,"fix":"193"},{"ruleId":"159","severity":1,"message":"187","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"170","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"169","line":1,"column":38,"nodeType":"161","messageId":"162","endLine":1,"endColumn":47},{"ruleId":"159","severity":1,"message":"168","line":1,"column":8,"nodeType":"161","messageId":"162","endLine":1,"endColumn":13},{"ruleId":"159","severity":1,"message":"169","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'LoginFuncCom' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Signup' is defined but never used.","'react' is defined but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","'successCondition' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history.location.state'. Either include it or remove the dependency array.","ArrayExpression",["196"],"'Alert' is defined but never used.","'useParams' is defined but never used.","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["197"],"no-useless-rename","Destructuring assignment id unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"198","text":"199"},"Destructuring assignment functionProp unnecessarily renamed.",{"range":"200","text":"201"},"'useState' is defined but never used.","'AuthService' is defined but never used.","'axios' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.",{"range":"202","text":"199"},{"range":"203","text":"201"},"no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},[249,255],"id",[257,283],"functionProp",[248,254],[256,282],"Update the dependencies array to be: [props.history.location.state]",{"range":"208","text":"209"},"Update the dependencies array to be: [params.id]",{"range":"210","text":"211"},[1244,1246],"[props.history.location.state]",[1429,1431],"[params.id]"]